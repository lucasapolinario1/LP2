<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TCX2tqj+aQuZZDa/mJP4TlWv7ef/2Q==
</value>
  </data>
</root>